language: c
env:
 - CABALVER=1.22 GHCVER=7.6.3
 - CABALVER=1.22 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=1.22 GHCVER=head

matrix:
  allow_failures:
   - env: CABALVER=1.22 GHCVER=7.10.1
   - env: CABALVER=1.22 GHCVER=head
    
before_install:
 - travis_retry sudo add-apt-repository 'deb http://deb.torproject.org/torproject.org precise main'
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc

 - sudo sudo rm -rf ~/.gnupg
 - sudo gpg --keyserver keys.gnupg.net --recv 886DDD89
 - sudo gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add -
 
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install -y tor deb.torproject.org-keyring

# Ensure that our executing user is able to read the tor auth cookie
 - sudo usermod -a -G debian-tor $USER

# This generates the initial configuration
 - sudo service tor start
 - sudo service tor stop

 - sudo sed -i /etc/tor/torrc -e 's/#ControlPort 9051/ControlPort 9051/'
 - sudo sed -i /etc/tor/torrc -e 's/#CookieAuthentication 1/CookieAuthentication 1\nExtORPortCookieAuthFileGroupReadable 1/'
 
 - sudo service tor start
 - ps aux | grep tor

# Wait until Tor control port is open
 - sudo cat /var/log/tor/log
 - nc -zvv localhost 9051; out=$?; while [[ $out -ne 0 ]]; do echo "Retry hit port 9051..."; nc -zvv localhost 9051; out=$?; sleep 1; done

# Installing cabal and ghc
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=$HOME/.cabal/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - travis_retry cabal update

# Happy/alex hack for ghc > 7.8.1
 - |
   if [ $GHCVER = "head" ] || [ ${GHCVER%.*} = "7.8" ] || [ ${GHCVER%.*} = "7.10" ]; then
     travis_retry sudo apt-get install happy-1.19.4 alex-3.1.3
     export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH
   else
     travis_retry sudo apt-get install happy alex
   fi

# Install hlint (via apt-get if available, otherwise via cabal)
 - travis_retry sudo apt-get -q -y install hlint || cabal install hlint
 
# Install hpc-coveralls
 - travis_retry cabal sandbox init
 - cabal install hpc-coveralls -j --bindir=$HOME/.cabal/bin/ --constraint='aeson >= 0.7'
 - cabal sandbox delete
 - which run-cabal-test

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal install --only-dependencies --enable-tests --enable-benchmarks -j

script:
 # Test reading of tor auth cookie
 - sudo -E su $USER -c 'cat /var/run/tor/control.authcookie'

 - hlint src --ignore="Parse error"
 - cabal configure --enable-tests --enable-benchmarks --enable-coverage -fdebug 
 - cabal build -j
 - travis_retry sudo -E su $USER -c 'run-cabal-test --cabal-name=cabal --show-details=streaming'
 - cabal check
 - cabal sdist
 
# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi ;
   cd ../

after_script:
 - find .
 - hpc-coveralls test-suite --exclude-dir=test --display-report
